{
  "contractName": "OraclizePrice",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "ETHGAS",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "oraclizeCallbacks",
      "outputs": [
        {
          "name": "oState",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETHprice",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogGasUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getPriceDetails",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getGasDetails",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052731d05badcbd3f4657d478debb471534156523b3d36000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200007162000090640100000000026401000000009004565b6200008a6200025c640100000000026401000000009004565b6200102f565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a1620001f26040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e65746865727363616e2e696f2f617081526020017f693f6d6f64756c653d737461747326616374696f6e3d6574687072696365292e81526020017f726573756c742e6574687573640000000000000000000000000000000000000081525062000401640100000000026401000000009004565b9050602060405190810160405280600060018111156200020e57fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156200025157fe5b021790555090505050565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a1620003986040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603c81526020017f6a736f6e2868747470733a2f2f65746867617373746174696f6e2e696e666f2f81526020017f6a736f6e2f6574686761734150492e6a736f6e292e617665726167650000000081525062000401640100000000026401000000009004565b9050602060405190810160405280600180811115620003b357fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff02191690836001811115620003f657fe5b021790555090505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200048557506000620004836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620009df640100000000026401000000009004565b145b15620004a857620004a66000620009ea640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200052e57600080fd5b505af115801562000543573d6000803e3d6000fd5b505050506040513d60208110156200055a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620006c6576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200064857600080fd5b505af11580156200065d573d6000803e3d6000fd5b505050506040513d60208110156200067457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200077257808201518184015260208101905062000755565b50505050905090810190601f168015620007a05780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b505050506040513d6020811015620007ec57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115620008245760006001029150620009d8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015620008de578082015181840152602081019050620008c1565b50505050905090810190601f1680156200090c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015620009475780820151818401526020810190506200092a565b50505050905090810190601f168015620009755780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156200099757600080fd5b505af1158015620009ac573d6000803e3d6000fd5b50505050506040513d6020811015620009c457600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b600062000a0562000a0c640100000000026401000000009004565b9050919050565b60008062000a3d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed620009df640100000000026401000000009004565b111562000af157731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000ae76040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062000f64640100000000026401000000009004565b6001905062000f61565b600062000b2173c03a2615d5efaf5f49f60b7bb6583eaec212fdf1620009df640100000000026401000000009004565b111562000bd55773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000bcb6040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062000f64640100000000026401000000009004565b6001905062000f61565b600062000c0573b7a07bcf2ba2f2703b24c0691b5278999c59ac7e620009df640100000000026401000000009004565b111562000cb95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000caf6040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062000f64640100000000026401000000009004565b6001905062000f61565b600062000ce973146500cfd35b22e4a392fe0adc06de1a1368ed48620009df640100000000026401000000009004565b111562000d9d5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d936040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062000f64640100000000026401000000009004565b6001905062000f61565b600062000dcd736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475620009df640100000000026401000000009004565b111562000e3257736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000f61565b600062000e627320e12a1f859b3feae5fb2a0a32c18f5a65555bbf620009df640100000000026401000000009004565b111562000ec7577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000f61565b600062000ef77351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa620009df640100000000026401000000009004565b111562000f5c577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000f61565b600090505b90565b806002908051906020019062000f7c92919062000f80565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000fc357805160ff191683800117855562000ff4565b8280016001018555821562000ff4579182015b8281111562000ff357825182559160200191906001019062000fd6565b5b50905062001003919062001007565b5090565b6200102c91905b80821115620010285760008160009055506001016200100e565b5090565b90565b611951806200103f6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063202c976f14610088578063226b27301461011857806327dc297e1461012257806338bbfa50146101995780633d86f4af14610256578063426d5ef1146102605780637be70f78146102b3575b600080fd5b34801561009457600080fd5b5061009d610343565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101206103e1565b005b34801561012e57600080fd5b506101976004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061059a565b005b3480156101a557600080fd5b506102546004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061083c565b005b61025e610841565b005b34801561026c57600080fd5b5061028f60048036038101908080356000191690602001909291905050506109d3565b6040518082600181111561029f57fe5b60ff16815260200191505060405180910390f35b3480156102bf57600080fd5b506102c86109fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103085780820151818401526020810190506102ed565b50505050905090810190601f1680156103355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b505050505081565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16105326040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e65746865727363616e2e696f2f617081526020017f693f6d6f64756c653d737461747326616374696f6e3d6574687072696365292e81526020017f726573756c742e65746875736400000000000000000000000000000000000000815250610a9c565b90506020604051908101604052806000600181111561054d57fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561058f57fe5b021790555090505050565b6105a2611861565b6105aa61103e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e357600080fd5b600760008460001916600019168152602001908152602001600020602060405190810160405290816000820160009054906101000a900460ff16600181111561062857fe5b600181111561063357fe5b8152505090506000600181111561064657fe5b8160000151600181111561065657fe5b141561073a578160069080519060200190610672929190611880565b507f221dd4a47b82d98e10a2a0ebcfdd3314637ca70f414c6987ea6774a907cc06c26006604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b50509250505060405180910390a16107356103e1565b610837565b60018081111561074657fe5b8160000151600181111561075657fe5b1415610836578160059080519060200190610772929190611880565b507f8d8a04c4b3a3c22a7f8c08e7cf8a8d032bd4db16808f124b9c27d7ba9a2268f66005604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561081f5780601f106107f45761010080835404028352916020019161081f565b820191906000526020600020905b81548152906001019060200180831161080257829003601f168201915b50509250505060405180910390a1610835610841565b5b5b505050565b505050565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a161096c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603c81526020017f6a736f6e2868747470733a2f2f65746867617373746174696f6e2e696e666f2f81526020017f6a736f6e2f6574686761734150492e6a736f6e292e6176657261676500000000815250610a9c565b905060206040519081016040528060018081111561098657fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156109c857fe5b021790555090505050565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b505050505081565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b0e57506000610b0c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661139c565b145b15610b1f57610b1d60006113a7565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ba457600080fd5b505af1158015610bb8573d6000803e3d6000fd5b505050506040513d6020811015610bce57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d36576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050506040513d6020811015610ce457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610de0578082015181840152602081019050610dc5565b50505050905090810190601f168015610e0d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e2c57600080fd5b505af1158015610e40573d6000803e3d6000fd5b505050506040513d6020811015610e5657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610e8c5760006001029150611037565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f44578082015181840152602081019050610f29565b50505050905090810190601f168015610f715780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610faa578082015181840152602081019050610f8f565b50505050905090810190601f168015610fd75780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b50505050506040513d602081101561102357600080fd5b810190808051906020019092919050505091505b5092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806110ae575060006110ac6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661139c565b145b156110bf576110bd60006113a7565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561114457600080fd5b505af1158015611158573d6000803e3d6000fd5b505050506040513d602081101561116e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d6576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561125a57600080fd5b505af115801561126e573d6000803e3d6000fd5b505050506040513d602081101561128457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561135c57600080fd5b505af1158015611370573d6000803e3d6000fd5b505050506040513d602081101561138657600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006113b16113b8565b9050919050565b6000806113d8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61139c565b111561147957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114706040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611847565b60019050611844565b600061149873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161139c565b11156115395773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115306040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611847565b60019050611844565b600061155873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61139c565b11156115f95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115f06040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611847565b60019050611844565b600061161873146500cfd35b22e4a392fe0adc06de1a1368ed4861139c565b11156116b95773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116b06040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611847565b60019050611844565b60006116d8736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561139c565b111561173b57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b600061175a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61139c565b11156117bd577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b60006117dc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61139c565b111561183f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b600090505b90565b806002908051906020019061185d929190611880565b5050565b6020604051908101604052806000600181111561187a57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118c157805160ff19168380011785556118ef565b828001600101855582156118ef579182015b828111156118ee5782518255916020019190600101906118d3565b5b5090506118fc9190611900565b5090565b61192291905b8082111561191e576000816000905550600101611906565b5090565b905600a165627a7a723058203662dc2906c6ef35955af0537e9dbddc94e91076e09b9905d4f5a2b69e5d7bce0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063202c976f14610088578063226b27301461011857806327dc297e1461012257806338bbfa50146101995780633d86f4af14610256578063426d5ef1146102605780637be70f78146102b3575b600080fd5b34801561009457600080fd5b5061009d610343565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101206103e1565b005b34801561012e57600080fd5b506101976004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061059a565b005b3480156101a557600080fd5b506102546004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061083c565b005b61025e610841565b005b34801561026c57600080fd5b5061028f60048036038101908080356000191690602001909291905050506109d3565b6040518082600181111561029f57fe5b60ff16815260200191505060405180910390f35b3480156102bf57600080fd5b506102c86109fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103085780820151818401526020810190506102ed565b50505050905090810190601f1680156103355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b505050505081565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16105326040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e65746865727363616e2e696f2f617081526020017f693f6d6f64756c653d737461747326616374696f6e3d6574687072696365292e81526020017f726573756c742e65746875736400000000000000000000000000000000000000815250610a9c565b90506020604051908101604052806000600181111561054d57fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561058f57fe5b021790555090505050565b6105a2611861565b6105aa61103e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e357600080fd5b600760008460001916600019168152602001908152602001600020602060405190810160405290816000820160009054906101000a900460ff16600181111561062857fe5b600181111561063357fe5b8152505090506000600181111561064657fe5b8160000151600181111561065657fe5b141561073a578160069080519060200190610672929190611880565b507f221dd4a47b82d98e10a2a0ebcfdd3314637ca70f414c6987ea6774a907cc06c26006604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b50509250505060405180910390a16107356103e1565b610837565b60018081111561074657fe5b8160000151600181111561075657fe5b1415610836578160059080519060200190610772929190611880565b507f8d8a04c4b3a3c22a7f8c08e7cf8a8d032bd4db16808f124b9c27d7ba9a2268f66005604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561081f5780601f106107f45761010080835404028352916020019161081f565b820191906000526020600020905b81548152906001019060200180831161080257829003601f168201915b50509250505060405180910390a1610835610841565b5b5b505050565b505050565b60007ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a161096c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603c81526020017f6a736f6e2868747470733a2f2f65746867617373746174696f6e2e696e666f2f81526020017f6a736f6e2f6574686761734150492e6a736f6e292e6176657261676500000000815250610a9c565b905060206040519081016040528060018081111561098657fe5b81525060076000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156109c857fe5b021790555090505050565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b505050505081565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b0e57506000610b0c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661139c565b145b15610b1f57610b1d60006113a7565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ba457600080fd5b505af1158015610bb8573d6000803e3d6000fd5b505050506040513d6020811015610bce57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d36576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050506040513d6020811015610ce457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610de0578082015181840152602081019050610dc5565b50505050905090810190601f168015610e0d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e2c57600080fd5b505af1158015610e40573d6000803e3d6000fd5b505050506040513d6020811015610e5657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610e8c5760006001029150611037565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f44578082015181840152602081019050610f29565b50505050905090810190601f168015610f715780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610faa578082015181840152602081019050610f8f565b50505050905090810190601f168015610fd75780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b50505050506040513d602081101561102357600080fd5b810190808051906020019092919050505091505b5092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806110ae575060006110ac6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661139c565b145b156110bf576110bd60006113a7565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561114457600080fd5b505af1158015611158573d6000803e3d6000fd5b505050506040513d602081101561116e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d6576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561125a57600080fd5b505af115801561126e573d6000803e3d6000fd5b505050506040513d602081101561128457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561135c57600080fd5b505af1158015611370573d6000803e3d6000fd5b505050506040513d602081101561138657600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006113b16113b8565b9050919050565b6000806113d8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61139c565b111561147957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114706040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611847565b60019050611844565b600061149873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161139c565b11156115395773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115306040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611847565b60019050611844565b600061155873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61139c565b11156115f95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115f06040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611847565b60019050611844565b600061161873146500cfd35b22e4a392fe0adc06de1a1368ed4861139c565b11156116b95773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116b06040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611847565b60019050611844565b60006116d8736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561139c565b111561173b57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b600061175a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61139c565b11156117bd577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b60006117dc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61139c565b111561183f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611844565b600090505b90565b806002908051906020019061185d929190611880565b5050565b6020604051908101604052806000600181111561187a57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118c157805160ff19168380011785556118ef565b828001600101855582156118ef579182015b828111156118ee5782518255916020019190600101906118d3565b5b5090506118fc9190611900565b5090565b61192291905b8082111561191e576000816000905550600101611906565b5090565b905600a165627a7a723058203662dc2906c6ef35955af0537e9dbddc94e91076e09b9905d4f5a2b69e5d7bce0029",
  "sourceMap": "318:2435:3:-;;;905:42;877:3;;:71;;;;;;;;;;;;;;;;;;958:17;:15;;;:17;;;:::i;:::-;985:15;:13;;;:15;;;:::i;:::-;318:2435;;1918:358;2070:15;1996:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:102;;;:::i;:::-;2070:120;;2229:40;;;;;;;;;2246:22;2229:40;;;;;;;;;;;2200:17;:26;2218:7;2200:26;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:358;:::o;2415:336::-;2564:15;2490:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:85;;;:::i;:::-;2564:103;;2706:38;;;;;;;;;2723:20;2706:38;;;;;;;;;;;2677:17;:26;2695:7;2677:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:336;:::o;6081:306:4:-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:4;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:4;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:4;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:4;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;;;:21;;;:::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;;;:55;;;:::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;;;:55;;;:::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;;;:55;;;:::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;;;:55;;;:::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;;;:55;;;:::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;;;:55;;;:::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;;;:55;;;:::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;318:2435:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "318:2435:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;365:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:358;;;;;;1269:508;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1269:508:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:146:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5624:146:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:336:3;;;;;;694:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;694:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;391:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:358::-;2070:15;1996:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:102::i;:::-;2070:120;;2229:40;;;;;;;;;2246:22;2229:40;;;;;;;;;;;2200:17;:26;2218:7;2200:26;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:358;:::o;1269:508::-;1401:25;;:::i;:::-;1370:20;:18;:20::i;:::-;1356:34;;:10;:34;;;1347:44;;;;;;;;1429:17;:23;1447:4;1429:23;;;;;;;;;;;;;;;;;1401:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:22;1466:34;;;;;;;;:1;:8;;;:34;;;;;;;;;1462:309;;;1527:6;1516:8;:17;;;;;;;;;;;;:::i;:::-;;1552:24;1567:8;1552:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:17;:15;:17::i;:::-;1462:309;;;1641:20;1629:32;;;;;;;;:1;:8;;;:32;;;;;;;;;1625:146;;;1686:6;1677;:15;;;;;;;;;;;;:::i;:::-;;1711:20;1724:6;1711:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1745:15;:13;:15::i;:::-;1625:146;1462:309;1269:508;;;:::o;5624:146:4:-;;;;:::o;2415:336:3:-;2564:15;2490:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:85::i;:::-;2564:103;;2706:38;;;;;;;;;2723:20;2706:38;;;;;;;;;;;2677:17;:26;2695:7;2677:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:336;:::o;694:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;391:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6081:306:4:-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:4;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:4;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:4;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:4;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;25350:112::-;25410:7;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:4;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:4;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25435:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25435:20:4;;;;;;;;;;;;;;;;25428:27;;25350:112;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;318:2435:3:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\n/**\n * Import usingOraclize.sol\n*/\nimport \"installed_contracts/oraclize-api/contracts/usingOraclize.sol\";\n\n/** \n* @author Alberto Ballesteros Rodríguez\n* @notice You can use this contract to get ETHUSD price and Gas price.\n* @dev Two querys using different IDs to the callback function. \n*/\ncontract OraclizePrice is usingOraclize {\n\n    string public ETHGAS;\n    string public ETHprice;\n\n    event LogInfo(string description);\n    event LogPriceUpdate(string price);\n    event LogGasUpdate(string price);\n    \n    enum oraclizeState \n    { \n        ForPrice, \n        ForGas\n    }\n    \n    struct oraclizeCallback \n    {\n        oraclizeState oState;\n    }\n    \n    mapping (bytes32 => oraclizeCallback) public oraclizeCallbacks;\n\n    constructor()\n        public \n        payable\n    {\n        // Replace the next line with your version:ç\n        OAR = OraclizeAddrResolverI(0x1d05bADcBD3F4657d478dEbB471534156523b3D3);\n        getPriceDetails();\n        getGasDetails();\n    }\n    \n    /**\n    * @notice Callback function to emit the events with the information we want.\n    * @dev Get the querys using the parameter myid and differ with oState\n    * @param myid The id of the query\n    * @param result The result of the query\n    */\n    function __callback(bytes32 myid, string result)\n        public\n    {\n        require (msg.sender == oraclize_cbAddress());\n        oraclizeCallback memory o = oraclizeCallbacks[myid];\n        if (o.oState == oraclizeState.ForPrice) {\n            ETHprice = result;\n            emit LogPriceUpdate(ETHprice);\n            getPriceDetails();\n\n        } else if (o.oState == oraclizeState.ForGas) {\n            ETHGAS = result;\n            emit LogGasUpdate(ETHGAS);\n            getGasDetails();\n        }\n    }\n\n    /**\n    * @notice Function to get the ETHUSD price from etherscan.io\n    * @dev Oraclize query callin the callback function\n    */\n    function getPriceDetails() \n        public\n        payable\n    {\n        emit LogInfo(\"Oraclize query was sent, standing by for the answer..\");\n        bytes32 queryId = oraclize_query(\"URL\", \"json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd\");\n        oraclizeCallbacks[queryId] = oraclizeCallback(oraclizeState.ForPrice);\n    }\n\n    /**\n    * @notice Function to get the Gas price from ETHGasStation\n    * @dev Oraclize query callin the callback function\n    */\n    function getGasDetails()\n        public\n        payable\n    {\n        emit LogInfo(\"Oraclize query was sent, standing by for the answer..\");\n        bytes32 queryId = oraclize_query(\"URL\", \"json(https://ethgasstation.info/json/ethgasAPI.json).average\");\n        oraclizeCallbacks[queryId] = oraclizeCallback(oraclizeState.ForGas);\n    }\n}",
  "sourcePath": "/home/alberto/consensys_devacademy/project/contracts/OraclizePrice.sol",
  "ast": {
    "absolutePath": "/home/alberto/consensys_devacademy/project/contracts/OraclizePrice.sol",
    "exportedSymbols": {
      "OraclizePrice": [
        687
      ]
    },
    "id": 688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 535,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 536,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 6510,
        "src": "61:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 537,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6509,
              "src": "344:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6509",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 538,
            "nodeType": "InheritanceSpecifier",
            "src": "344:13:3"
          }
        ],
        "contractDependencies": [
          6509
        ],
        "contractKind": "contract",
        "documentation": "@author Alberto Ballesteros Rodríguez\n@notice You can use this contract to get ETHUSD price and Gas price.\n@dev Two querys using different IDs to the callback function. ",
        "fullyImplemented": true,
        "id": 687,
        "linearizedBaseContracts": [
          687,
          6509
        ],
        "name": "OraclizePrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 540,
            "name": "ETHGAS",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "365:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 539,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 542,
            "name": "ETHprice",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "391:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 541,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "391:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 546,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "434:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:20:3"
            },
            "src": "420:34:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 550,
            "name": "LogPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "480:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "479:14:3"
            },
            "src": "459:35:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 554,
            "name": "LogGasUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "518:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "517:14:3"
            },
            "src": "499:33:3"
          },
          {
            "canonicalName": "OraclizePrice.oraclizeState",
            "id": 557,
            "members": [
              {
                "id": 555,
                "name": "ForPrice",
                "nodeType": "EnumValue",
                "src": "577:8:3"
              },
              {
                "id": 556,
                "name": "ForGas",
                "nodeType": "EnumValue",
                "src": "596:6:3"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "542:66:3"
          },
          {
            "canonicalName": "OraclizePrice.oraclizeCallback",
            "id": 560,
            "members": [
              {
                "constant": false,
                "id": 559,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 560,
                "src": "657:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$557",
                  "typeString": "enum OraclizePrice.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 558,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 557,
                  "src": "657:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$557",
                    "typeString": "enum OraclizePrice.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 687,
            "src": "618:66:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 564,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "694:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback)"
            },
            "typeName": {
              "id": 563,
              "keyType": {
                "id": 561,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "703:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "694:37:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 562,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 560,
                "src": "714:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage_ptr",
                  "typeString": "struct OraclizePrice.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "813:194:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "877:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307831643035624144634244334634363537643437386445624234373135333431353635323362334433",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "905:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x1d05bADcBD3F4657d478dEbB471534156523b3D3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 568,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "883:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$805_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "883:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "877:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "877:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 573,
                      "name": "getPriceDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "958:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "958:17:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 576,
                      "name": "getGasDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "985:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "985:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 580,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:3"
            },
            "scope": 687,
            "src": "763:244:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "1337:440:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6524,
                            "src": "1356:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1356:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 590,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4138,
                            "src": "1370:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1370:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1356:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6527,
                        6528
                      ],
                      "referencedDeclaration": 6527,
                      "src": "1347:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:44:3"
                },
                {
                  "assignments": [
                    596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 596,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "1401:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                        "typeString": "struct OraclizePrice.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 595,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 560,
                        "src": "1401:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage_ptr",
                          "typeString": "struct OraclizePrice.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 597,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1429:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 599,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 598,
                      "name": "myid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "1447:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1429:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:51:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$557",
                      "typeString": "enum OraclizePrice.oraclizeState"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "1466:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                          "typeString": "struct OraclizePrice.oraclizeCallback memory"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "1466:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 603,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "1478:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                          "typeString": "type(enum OraclizePrice.oraclizeState)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1478:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      }
                    },
                    "src": "1466:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 618,
                          "name": "o",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "1629:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                            "typeString": "struct OraclizePrice.oraclizeCallback memory"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 559,
                        "src": "1629:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_oraclizeState_$557",
                          "typeString": "enum OraclizePrice.oraclizeState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 620,
                          "name": "oraclizeState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "1641:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                            "typeString": "type(enum OraclizePrice.oraclizeState)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ForGas",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1641:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_oraclizeState_$557",
                          "typeString": "enum OraclizePrice.oraclizeState"
                        }
                      },
                      "src": "1629:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 635,
                    "nodeType": "IfStatement",
                    "src": "1625:146:3",
                    "trueBody": {
                      "id": 634,
                      "nodeType": "Block",
                      "src": "1663:108:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 623,
                              "name": "ETHGAS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "1677:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 624,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "1686:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "src": "1677:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "id": 626,
                          "nodeType": "ExpressionStatement",
                          "src": "1677:15:3"
                        },
                        {
                          "eventCall": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 628,
                                "name": "ETHGAS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "1724:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 627,
                              "name": "LogGasUpdate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "1711:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1711:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 630,
                          "nodeType": "EmitStatement",
                          "src": "1706:25:3"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 631,
                              "name": "getGasDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "1745:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1745:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 633,
                          "nodeType": "ExpressionStatement",
                          "src": "1745:15:3"
                        }
                      ]
                    }
                  },
                  "id": 636,
                  "nodeType": "IfStatement",
                  "src": "1462:309:3",
                  "trueBody": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "1502:117:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "ETHprice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "1516:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "1527:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1516:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "1516:17:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "ETHprice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "1567:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 610,
                            "name": "LogPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1552:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1552:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 613,
                        "nodeType": "EmitStatement",
                        "src": "1547:29:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 614,
                            "name": "getPriceDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "1590:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1590:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 616,
                        "nodeType": "ExpressionStatement",
                        "src": "1590:17:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Callback function to emit the events with the information we want.\n@dev Get the querys using the parameter myid and differ with oState\n@param myid The id of the query\n@param result The result of the query",
            "id": 638,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "1289:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "1303:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1288:29:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1337:0:3"
            },
            "scope": 687,
            "src": "1269:508:3",
            "stateMutability": "nonpayable",
            "superFunction": 1080,
            "visibility": "public"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "1981:295:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 641,
                      "name": "LogInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "1996:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "EmitStatement",
                  "src": "1991:69:3"
                },
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 662,
                      "src": "2070:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2070:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2103:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e65746865727363616e2e696f2f6170693f6d6f64756c653d737461747326616374696f6e3d6574687072696365292e726573756c742e657468757364",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:79:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0cf33c7bcdb2a5993fd33a0d4f74ae778be9d49155c7caf145b804fb507fd62",
                          "typeString": "literal_string \"json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd\""
                        },
                        "value": "json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0cf33c7bcdb2a5993fd33a0d4f74ae778be9d49155c7caf145b804fb507fd62",
                          "typeString": "literal_string \"json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd\""
                        }
                      ],
                      "id": 647,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1170,
                        1212,
                        1258,
                        1302,
                        1345,
                        1390,
                        1439,
                        1486,
                        1533,
                        1582,
                        1635,
                        1686,
                        1723,
                        1763,
                        1806,
                        1846,
                        1891,
                        1939,
                        1990,
                        2038,
                        2091,
                        2147,
                        2206,
                        2262,
                        2323,
                        2387,
                        2454,
                        2518,
                        2587,
                        2659,
                        2734,
                        2806,
                        2853,
                        2902,
                        2955,
                        3006,
                        3043,
                        3083,
                        3126,
                        3166,
                        3211,
                        3259,
                        3310,
                        3358,
                        3411,
                        3467,
                        3526,
                        3582,
                        3643,
                        3707,
                        3774,
                        3838,
                        3907,
                        3979,
                        4054,
                        4126
                      ],
                      "referencedDeclaration": 1170,
                      "src": "2088:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2070:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "oraclizeCallbacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "2200:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                          "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "2218:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2200:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                        "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 656,
                            "name": "oraclizeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2246:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                              "typeString": "type(enum OraclizePrice.oraclizeState)"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2246:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        ],
                        "id": 655,
                        "name": "oraclizeCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2229:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$560_storage_ptr_$",
                          "typeString": "type(struct OraclizePrice.oraclizeCallback storage pointer)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2229:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory",
                        "typeString": "struct OraclizePrice.oraclizeCallback memory"
                      }
                    },
                    "src": "2200:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:69:3"
                }
              ]
            },
            "documentation": "@notice Function to get the ETHUSD price from etherscan.io\n@dev Oraclize query callin the callback function",
            "id": 662,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getPriceDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:3"
            },
            "scope": 687,
            "src": "1918:358:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "2475:276:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 665,
                      "name": "LogInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "2490:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "EmitStatement",
                  "src": "2485:69:3"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 686,
                      "src": "2564:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2597:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f65746867617373746174696f6e2e696e666f2f6a736f6e2f6574686761734150492e6a736f6e292e61766572616765",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2604:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84dcb1af278ee38aa3dd315aa27bb5ea08caf0aeaeef670bda6e57c2033906d1",
                          "typeString": "literal_string \"json(https://ethgasstation.info/json/ethgasAPI.json).average\""
                        },
                        "value": "json(https://ethgasstation.info/json/ethgasAPI.json).average"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84dcb1af278ee38aa3dd315aa27bb5ea08caf0aeaeef670bda6e57c2033906d1",
                          "typeString": "literal_string \"json(https://ethgasstation.info/json/ethgasAPI.json).average\""
                        }
                      ],
                      "id": 671,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1170,
                        1212,
                        1258,
                        1302,
                        1345,
                        1390,
                        1439,
                        1486,
                        1533,
                        1582,
                        1635,
                        1686,
                        1723,
                        1763,
                        1806,
                        1846,
                        1891,
                        1939,
                        1990,
                        2038,
                        2091,
                        2147,
                        2206,
                        2262,
                        2323,
                        2387,
                        2454,
                        2518,
                        2587,
                        2659,
                        2734,
                        2806,
                        2853,
                        2902,
                        2955,
                        3006,
                        3043,
                        3083,
                        3126,
                        3166,
                        3211,
                        3259,
                        3310,
                        3358,
                        3411,
                        3467,
                        3526,
                        3582,
                        3643,
                        3707,
                        3774,
                        3838,
                        3907,
                        3979,
                        4054,
                        4126
                      ],
                      "referencedDeclaration": 1170,
                      "src": "2582:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:85:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2564:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "oraclizeCallbacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "2677:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                          "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                        }
                      },
                      "id": 678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2695:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2677:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                        "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 680,
                            "name": "oraclizeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2723:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                              "typeString": "type(enum OraclizePrice.oraclizeState)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2723:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        ],
                        "id": 679,
                        "name": "oraclizeCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2706:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$560_storage_ptr_$",
                          "typeString": "type(struct OraclizePrice.oraclizeCallback storage pointer)"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2706:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory",
                        "typeString": "struct OraclizePrice.oraclizeCallback memory"
                      }
                    },
                    "src": "2677:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:67:3"
                }
              ]
            },
            "documentation": "@notice Function to get the Gas price from ETHGasStation\n@dev Oraclize query callin the callback function",
            "id": 686,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getGasDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:0:3"
            },
            "scope": 687,
            "src": "2415:336:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 688,
        "src": "318:2435:3"
      }
    ],
    "src": "0:2753:3"
  },
  "legacyAST": {
    "absolutePath": "/home/alberto/consensys_devacademy/project/contracts/OraclizePrice.sol",
    "exportedSymbols": {
      "OraclizePrice": [
        687
      ]
    },
    "id": 688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 535,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 536,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 6510,
        "src": "61:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 537,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6509,
              "src": "344:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6509",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 538,
            "nodeType": "InheritanceSpecifier",
            "src": "344:13:3"
          }
        ],
        "contractDependencies": [
          6509
        ],
        "contractKind": "contract",
        "documentation": "@author Alberto Ballesteros Rodríguez\n@notice You can use this contract to get ETHUSD price and Gas price.\n@dev Two querys using different IDs to the callback function. ",
        "fullyImplemented": true,
        "id": 687,
        "linearizedBaseContracts": [
          687,
          6509
        ],
        "name": "OraclizePrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 540,
            "name": "ETHGAS",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "365:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 539,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 542,
            "name": "ETHprice",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "391:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 541,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "391:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 546,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "434:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:20:3"
            },
            "src": "420:34:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 550,
            "name": "LogPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "480:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "479:14:3"
            },
            "src": "459:35:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 554,
            "name": "LogGasUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "518:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "517:14:3"
            },
            "src": "499:33:3"
          },
          {
            "canonicalName": "OraclizePrice.oraclizeState",
            "id": 557,
            "members": [
              {
                "id": 555,
                "name": "ForPrice",
                "nodeType": "EnumValue",
                "src": "577:8:3"
              },
              {
                "id": 556,
                "name": "ForGas",
                "nodeType": "EnumValue",
                "src": "596:6:3"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "542:66:3"
          },
          {
            "canonicalName": "OraclizePrice.oraclizeCallback",
            "id": 560,
            "members": [
              {
                "constant": false,
                "id": 559,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 560,
                "src": "657:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$557",
                  "typeString": "enum OraclizePrice.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 558,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 557,
                  "src": "657:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$557",
                    "typeString": "enum OraclizePrice.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 687,
            "src": "618:66:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 564,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "694:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback)"
            },
            "typeName": {
              "id": 563,
              "keyType": {
                "id": 561,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "703:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "694:37:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 562,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 560,
                "src": "714:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage_ptr",
                  "typeString": "struct OraclizePrice.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "813:194:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "877:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307831643035624144634244334634363537643437386445624234373135333431353635323362334433",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "905:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x1d05bADcBD3F4657d478dEbB471534156523b3D3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 568,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "883:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$805_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "883:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "877:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$805",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "877:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 573,
                      "name": "getPriceDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "958:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "958:17:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 576,
                      "name": "getGasDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "985:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "985:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 580,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:3"
            },
            "scope": 687,
            "src": "763:244:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "1337:440:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6524,
                            "src": "1356:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1356:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 590,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4138,
                            "src": "1370:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1370:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1356:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6527,
                        6528
                      ],
                      "referencedDeclaration": 6527,
                      "src": "1347:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:44:3"
                },
                {
                  "assignments": [
                    596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 596,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "1401:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                        "typeString": "struct OraclizePrice.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 595,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 560,
                        "src": "1401:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage_ptr",
                          "typeString": "struct OraclizePrice.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 597,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1429:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 599,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 598,
                      "name": "myid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "1447:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1429:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:51:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$557",
                      "typeString": "enum OraclizePrice.oraclizeState"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "1466:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                          "typeString": "struct OraclizePrice.oraclizeCallback memory"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "1466:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 603,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "1478:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                          "typeString": "type(enum OraclizePrice.oraclizeState)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1478:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      }
                    },
                    "src": "1466:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_oraclizeState_$557",
                        "typeString": "enum OraclizePrice.oraclizeState"
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 618,
                          "name": "o",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "1629:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory_ptr",
                            "typeString": "struct OraclizePrice.oraclizeCallback memory"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 559,
                        "src": "1629:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_oraclizeState_$557",
                          "typeString": "enum OraclizePrice.oraclizeState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 620,
                          "name": "oraclizeState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "1641:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                            "typeString": "type(enum OraclizePrice.oraclizeState)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ForGas",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1641:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_oraclizeState_$557",
                          "typeString": "enum OraclizePrice.oraclizeState"
                        }
                      },
                      "src": "1629:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 635,
                    "nodeType": "IfStatement",
                    "src": "1625:146:3",
                    "trueBody": {
                      "id": 634,
                      "nodeType": "Block",
                      "src": "1663:108:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 623,
                              "name": "ETHGAS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "1677:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 624,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "1686:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "src": "1677:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "id": 626,
                          "nodeType": "ExpressionStatement",
                          "src": "1677:15:3"
                        },
                        {
                          "eventCall": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 628,
                                "name": "ETHGAS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "1724:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 627,
                              "name": "LogGasUpdate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "1711:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1711:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 630,
                          "nodeType": "EmitStatement",
                          "src": "1706:25:3"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 631,
                              "name": "getGasDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "1745:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1745:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 633,
                          "nodeType": "ExpressionStatement",
                          "src": "1745:15:3"
                        }
                      ]
                    }
                  },
                  "id": 636,
                  "nodeType": "IfStatement",
                  "src": "1462:309:3",
                  "trueBody": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "1502:117:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "ETHprice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "1516:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "1527:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1516:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "1516:17:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "ETHprice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "1567:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 610,
                            "name": "LogPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1552:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1552:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 613,
                        "nodeType": "EmitStatement",
                        "src": "1547:29:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 614,
                            "name": "getPriceDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "1590:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1590:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 616,
                        "nodeType": "ExpressionStatement",
                        "src": "1590:17:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Callback function to emit the events with the information we want.\n@dev Get the querys using the parameter myid and differ with oState\n@param myid The id of the query\n@param result The result of the query",
            "id": 638,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "1289:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "1303:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1288:29:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1337:0:3"
            },
            "scope": 687,
            "src": "1269:508:3",
            "stateMutability": "nonpayable",
            "superFunction": 1080,
            "visibility": "public"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "1981:295:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 641,
                      "name": "LogInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "1996:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "EmitStatement",
                  "src": "1991:69:3"
                },
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 662,
                      "src": "2070:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2070:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2103:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e65746865727363616e2e696f2f6170693f6d6f64756c653d737461747326616374696f6e3d6574687072696365292e726573756c742e657468757364",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:79:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0cf33c7bcdb2a5993fd33a0d4f74ae778be9d49155c7caf145b804fb507fd62",
                          "typeString": "literal_string \"json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd\""
                        },
                        "value": "json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0cf33c7bcdb2a5993fd33a0d4f74ae778be9d49155c7caf145b804fb507fd62",
                          "typeString": "literal_string \"json(https://api.etherscan.io/api?module=stats&action=ethprice).result.ethusd\""
                        }
                      ],
                      "id": 647,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1170,
                        1212,
                        1258,
                        1302,
                        1345,
                        1390,
                        1439,
                        1486,
                        1533,
                        1582,
                        1635,
                        1686,
                        1723,
                        1763,
                        1806,
                        1846,
                        1891,
                        1939,
                        1990,
                        2038,
                        2091,
                        2147,
                        2206,
                        2262,
                        2323,
                        2387,
                        2454,
                        2518,
                        2587,
                        2659,
                        2734,
                        2806,
                        2853,
                        2902,
                        2955,
                        3006,
                        3043,
                        3083,
                        3126,
                        3166,
                        3211,
                        3259,
                        3310,
                        3358,
                        3411,
                        3467,
                        3526,
                        3582,
                        3643,
                        3707,
                        3774,
                        3838,
                        3907,
                        3979,
                        4054,
                        4126
                      ],
                      "referencedDeclaration": 1170,
                      "src": "2088:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2070:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "oraclizeCallbacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "2200:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                          "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "2218:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2200:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                        "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 656,
                            "name": "oraclizeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2246:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                              "typeString": "type(enum OraclizePrice.oraclizeState)"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2246:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        ],
                        "id": 655,
                        "name": "oraclizeCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2229:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$560_storage_ptr_$",
                          "typeString": "type(struct OraclizePrice.oraclizeCallback storage pointer)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2229:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory",
                        "typeString": "struct OraclizePrice.oraclizeCallback memory"
                      }
                    },
                    "src": "2200:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:69:3"
                }
              ]
            },
            "documentation": "@notice Function to get the ETHUSD price from etherscan.io\n@dev Oraclize query callin the callback function",
            "id": 662,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getPriceDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:3"
            },
            "scope": 687,
            "src": "1918:358:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "2475:276:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 665,
                      "name": "LogInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "2490:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "EmitStatement",
                  "src": "2485:69:3"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 686,
                      "src": "2564:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2597:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f65746867617373746174696f6e2e696e666f2f6a736f6e2f6574686761734150492e6a736f6e292e61766572616765",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2604:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84dcb1af278ee38aa3dd315aa27bb5ea08caf0aeaeef670bda6e57c2033906d1",
                          "typeString": "literal_string \"json(https://ethgasstation.info/json/ethgasAPI.json).average\""
                        },
                        "value": "json(https://ethgasstation.info/json/ethgasAPI.json).average"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84dcb1af278ee38aa3dd315aa27bb5ea08caf0aeaeef670bda6e57c2033906d1",
                          "typeString": "literal_string \"json(https://ethgasstation.info/json/ethgasAPI.json).average\""
                        }
                      ],
                      "id": 671,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1170,
                        1212,
                        1258,
                        1302,
                        1345,
                        1390,
                        1439,
                        1486,
                        1533,
                        1582,
                        1635,
                        1686,
                        1723,
                        1763,
                        1806,
                        1846,
                        1891,
                        1939,
                        1990,
                        2038,
                        2091,
                        2147,
                        2206,
                        2262,
                        2323,
                        2387,
                        2454,
                        2518,
                        2587,
                        2659,
                        2734,
                        2806,
                        2853,
                        2902,
                        2955,
                        3006,
                        3043,
                        3083,
                        3126,
                        3166,
                        3211,
                        3259,
                        3310,
                        3358,
                        3411,
                        3467,
                        3526,
                        3582,
                        3643,
                        3707,
                        3774,
                        3838,
                        3907,
                        3979,
                        4054,
                        4126
                      ],
                      "referencedDeclaration": 1170,
                      "src": "2582:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:85:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2564:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "oraclizeCallbacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "2677:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$560_storage_$",
                          "typeString": "mapping(bytes32 => struct OraclizePrice.oraclizeCallback storage ref)"
                        }
                      },
                      "id": 678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2695:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2677:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                        "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 680,
                            "name": "oraclizeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2723:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_oraclizeState_$557_$",
                              "typeString": "type(enum OraclizePrice.oraclizeState)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2723:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_oraclizeState_$557",
                            "typeString": "enum OraclizePrice.oraclizeState"
                          }
                        ],
                        "id": 679,
                        "name": "oraclizeCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2706:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$560_storage_ptr_$",
                          "typeString": "type(struct OraclizePrice.oraclizeCallback storage pointer)"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2706:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$560_memory",
                        "typeString": "struct OraclizePrice.oraclizeCallback memory"
                      }
                    },
                    "src": "2677:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$560_storage",
                      "typeString": "struct OraclizePrice.oraclizeCallback storage ref"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:67:3"
                }
              ]
            },
            "documentation": "@notice Function to get the Gas price from ETHGasStation\n@dev Oraclize query callin the callback function",
            "id": 686,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getGasDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:0:3"
            },
            "scope": 687,
            "src": "2415:336:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 688,
        "src": "318:2435:3"
      }
    ],
    "src": "0:2753:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-26T16:47:22.640Z"
}